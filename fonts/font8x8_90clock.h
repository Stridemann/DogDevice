#ifndef FONT8x8_90C_H
#define FONT8x8_90C_H

GLCDFONTDECL(font8x8_90c) = {
		0x0, 0x1, // size of one indicates fixed font width and no pixel padding
		0x08, // width
		0x08, // height 
		0x20, // first char
		0x5f, // char count
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	// <space>
0x00, 0x10, 0x00, 0x10, 0x10, 0x10, 0x10, 0x10,	// !
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x28,	// "
0x00, 0x24, 0x7E, 0x24, 0x24, 0x7E, 0x24, 0x00,	// #
0x00, 0x08, 0x3E, 0x28, 0x3E, 0x0A, 0x3E, 0x08,	// $
0x00, 0x62, 0x64, 0x08, 0x10, 0x26, 0x46, 0x00,	// %
0x00, 0x5C, 0x22, 0x54, 0x08, 0x14, 0x08, 0x00,	// &
0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x10, 0x00,	// '
0x00, 0x10, 0x08, 0x08, 0x08, 0x08, 0x10, 0x00,	// (
0x00, 0x08, 0x10, 0x10, 0x10, 0x10, 0x08, 0x00,	// )
0x00, 0x14, 0x08, 0x3E, 0x08, 0x14, 0x00, 0x00,	// *
0x00, 0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00,	// +
0x08, 0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00,	// ,
0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00,	// -
0x00, 0x18, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,	// .
0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x00, 0x00,	// /
0x00, 0x1E, 0x23, 0x25, 0x29, 0x31, 0x1E, 0x00,	// 0
0x00, 0x1F, 0x04, 0x04, 0x04, 0x05, 0x06, 0x00,	// 1
0x00, 0x3F, 0x01, 0x1E, 0x20, 0x21, 0x1E, 0x00,	// 2
0x00, 0x1E, 0x21, 0x20, 0x18, 0x21, 0x1E, 0x00,	// 3
0x00, 0x08, 0x3F, 0x09, 0x0A, 0x0C, 0x08, 0x00,	// 4
0x00, 0x1E, 0x21, 0x20, 0x1F, 0x01, 0x3F, 0x00,	// 5
0x00, 0x1E, 0x21, 0x21, 0x1F, 0x01, 0x1E, 0x00,	// 6
0x00, 0x04, 0x04, 0x08, 0x10, 0x20, 0x3F, 0x00,	// 7
0x00, 0x1E, 0x21, 0x21, 0x1E, 0x21, 0x1E, 0x00,	// 8
0x00, 0x1E, 0x20, 0x3E, 0x21, 0x21, 0x1E, 0x00,	// 9
0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,	// :
0x04, 0x08, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00,	// ;
0x00, 0x10, 0x08, 0x04, 0x08, 0x10, 0x00, 0x00,	// <
0x00, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x00, 0x00,	// =
0x00, 0x04, 0x08, 0x10, 0x08, 0x04, 0x00, 0x00,	// >
0x00, 0x10, 0x00, 0x10, 0x20, 0x42, 0x3C, 0x00,	// ?
0x00, 0x3C, 0x02, 0x7A, 0x6A, 0x52, 0x3C, 0x00,	// @
0x00, 0x21, 0x21, 0x3F, 0x21, 0x21, 0x1E, 0x00,	// A
0x00, 0x1F, 0x21, 0x21, 0x1F, 0x21, 0x1F, 0x00,	// B
0x00, 0x1E, 0x21, 0x01, 0x01, 0x21, 0x1E, 0x00,	// C
0x00, 0x0F, 0x11, 0x21, 0x21, 0x11, 0x0F, 0x00,	// D
0x00, 0x3F, 0x01, 0x01, 0x1F, 0x01, 0x3F, 0x00,	// E
0x00, 0x01, 0x01, 0x01, 0x1F, 0x01, 0x3F, 0x00,	// F
0x00, 0x1E, 0x21, 0x39, 0x01, 0x21, 0x1E, 0x00,	// G
0x00, 0x21, 0x21, 0x21, 0x3F, 0x21, 0x21, 0x00,	// H
0x00, 0x3E, 0x08, 0x08, 0x08, 0x08, 0x3E, 0x00,	// I
0x00, 0x1E, 0x21, 0x21, 0x20, 0x20, 0x20, 0x00,	// J
0x00, 0x21, 0x11, 0x09, 0x07, 0x09, 0x11, 0x00,	// K
0x00, 0x3F, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00,	// L
0x00, 0x21, 0x21, 0x21, 0x2D, 0x33, 0x21, 0x00,	// M
0x00, 0x21, 0x31, 0x29, 0x25, 0x23, 0x21, 0x00,	// N
0x00, 0x1E, 0x21, 0x21, 0x21, 0x21, 0x1E, 0x00,	// O
0x00, 0x01, 0x01, 0x1F, 0x21, 0x21, 0x1F, 0x00,	// P
0x00, 0x1E, 0x29, 0x25, 0x21, 0x21, 0x1E, 0x00,	// Q
0x00, 0x21, 0x11, 0x1F, 0x21, 0x21, 0x1F, 0x00,	// R
0x00, 0x1E, 0x21, 0x20, 0x1E, 0x01, 0x1E, 0x00,	// S
0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x7F, 0x00,	// T
0x00, 0x1E, 0x21, 0x21, 0x21, 0x21, 0x21, 0x00,	// U
0x00, 0x0C, 0x12, 0x21, 0x21, 0x21, 0x21, 0x00,	// V
0x00, 0x12, 0x2D, 0x21, 0x21, 0x21, 0x21, 0x00,	// W
0x00, 0x21, 0x12, 0x0C, 0x0C, 0x12, 0x21, 0x00,	// X
0x00, 0x08, 0x08, 0x08, 0x14, 0x22, 0x41, 0x00,	// Y
0x00, 0x3F, 0x02, 0x04, 0x08, 0x10, 0x3F, 0x00,	// Z
0x00, 0x1C, 0x04, 0x04, 0x04, 0x04, 0x1C, 0x00,	// [
0x00, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00, 0x00,	// <backslash>
0x00, 0x1C, 0x10, 0x10, 0x10, 0x10, 0x1C, 0x00,	// ]
0x00, 0x08, 0x08, 0x08, 0x2A, 0x1C, 0x08, 0x00,	// ^
0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	// _
0x3C, 0x42, 0x99, 0x85, 0x85, 0x99, 0x42, 0x3C,	// `
0x00, 0x3C, 0x22, 0x3C, 0x20, 0x1C, 0x00, 0x00,	// a
0x00, 0x1E, 0x22, 0x22, 0x1E, 0x02, 0x02, 0x00,	// b
0x00, 0x38, 0x04, 0x04, 0x04, 0x38, 0x00, 0x00,	// c
0x00, 0x3C, 0x22, 0x22, 0x3C, 0x20, 0x20, 0x00,	// d
0x00, 0x3C, 0x02, 0x1E, 0x22, 0x1C, 0x00, 0x00,	// e
0x00, 0x08, 0x08, 0x08, 0x18, 0x08, 0x30, 0x00,	// f
0x3C, 0x40, 0x7C, 0x42, 0x42, 0x7C, 0x00, 0x00,	// g
0x00, 0x22, 0x22, 0x22, 0x1E, 0x02, 0x02, 0x00,	// h
0x00, 0x38, 0x10, 0x10, 0x18, 0x00, 0x10, 0x00,	// i
0x18, 0x24, 0x20, 0x20, 0x20, 0x00, 0x20, 0x00,	// j
0x00, 0x12, 0x0A, 0x06, 0x06, 0x0A, 0x02, 0x00,	// k
0x00, 0x30, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00,	// l
0x00, 0x2A, 0x2A, 0x2A, 0x2A, 0x16, 0x00, 0x00,	// m
0x00, 0x22, 0x22, 0x22, 0x22, 0x1E, 0x00, 0x00,	// n
0x00, 0x1C, 0x22, 0x22, 0x22, 0x1C, 0x00, 0x00,	// o
0x02, 0x02, 0x1E, 0x22, 0x22, 0x1E, 0x00, 0x00,	// p
0x60, 0x20, 0x3C, 0x22, 0x22, 0x3C, 0x00, 0x00,	// q
0x00, 0x04, 0x04, 0x04, 0x04, 0x38, 0x00, 0x00,	// r
0x00, 0x1E, 0x20, 0x1C, 0x02, 0x1C, 0x00, 0x00,	// s
0x00, 0x30, 0x08, 0x08, 0x08, 0x1C, 0x08, 0x00,	// t
0x00, 0x1C, 0x22, 0x22, 0x22, 0x22, 0x00, 0x00,	// u
0x00, 0x08, 0x14, 0x14, 0x22, 0x22, 0x00, 0x00,	// v
0x00, 0x14, 0x2A, 0x2A, 0x2A, 0x22, 0x00, 0x00,	// w
0x00, 0x22, 0x14, 0x08, 0x14, 0x22, 0x00, 0x00,	// x
0x1C, 0x20, 0x3C, 0x22, 0x22, 0x22, 0x00, 0x00,	// y
0x00, 0x3E, 0x04, 0x08, 0x10, 0x3E, 0x00, 0x00,	// z
0x00, 0x38, 0x08, 0x08, 0x06, 0x08, 0x38, 0x00,	// {
0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00,	// |
0x00, 0x0E, 0x08, 0x08, 0x30, 0x08, 0x0E, 0x00,	// }
0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x28, 0x00,	// ~
};

#endif
